/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.demo.op.api;

import javax.annotation.Generated;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.demo.op.model.EmptyResponseDTO;
import com.demo.op.model.ReportsTypesResponseDTO;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-07-21T09:36:06.188-04:00[America/Santo_Domingo]")
@Validated
@Tag(name = "tipo-reporte", description = "the tipo-reporte API")
public interface TipoReporteApi {

    /**
     * GET /tipo-reporte : Retorna todos los tipos de reporte
     *
     * @return Operacion Exitosa (status code 200)
     *         or No Autorizado (status code 401)
     *         or Error en el servidor (status code 500)
     */
    @Operation(
        operationId = "getAllTipoReporte",
        summary = "Retorna todos los tipos de reporte",
        tags = { "Tipo Reporte" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Operacion Exitosa", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  ReportsTypesResponseDTO.class))),
            @ApiResponse(responseCode = "401", description = "No Autorizado", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  EmptyResponseDTO.class))),
            @ApiResponse(responseCode = "500", description = "Error en el servidor", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  EmptyResponseDTO.class)))
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/tipo-reporte",
        produces = { "application/json" }
    )
    ResponseEntity<ReportsTypesResponseDTO> getAllTipoReporte(
        
    );

}
